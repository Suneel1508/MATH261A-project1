---
title: "How Pace Deficit and Starting Grid Relate to Finishing Position in Formula 1"
author: "Suneel Chandra Vanamu"
date: 2025-10-23
abstract: |
  This paper investigates how a driver’s on-day pace—measured by the **best-lap deficit** (the difference between a driver’s quickest lap and the race’s overall fastest lap)—and **starting grid position** (qualifying rank on the starting grid) relate to **finishing position** in Formula 1 races. The goal is to quantify how much each of these straightforward metrics helps predict race outcomes, without resorting to complex multivariable models.

  Using data from the **Formula 1 Database (F1DB)** covering the **2014–2024 hybrid-engine era**, when power-unit regulations stabilized and race formats were relatively consistent, I fit two simple linear regressions: best-lap pace deficit predicting finishing position, and starting-grid position predicting finishing position.

  The hybrid-era restriction helps ensure comparability across seasons, though **track-specific differences** (such as overtaking difficulty or circuit length) remain unmodeled and may affect the results. I summarize each model’s slope, 95% confidence interval, and diagnostics including **R²**, **adjusted R²**, and **residual standard error** (in finishing-position units).
research_question: "How do a driver's best-lap pace deficit and starting grid position each relate to their finishing position in Formula 1 races (2014–present)?"
thanks: "Project repository: https://github.com/Suneel1508/MATH261A-project1"
format:
  pdf:
    fontsize: 10pt
    fig-width: 5.2
    fig-height: 3.2
number-sections: true
bibliography: references.bib
editor: visual
---

```{r}
#| include: false
#| warning: false
#| message: false
library(tidyverse)
library(readr)
library(dplyr)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(broom)
library(knitr)
```

# Introduction {#sec-introduction}

Results in Formula 1 can be influenced by many changing factors such as strategy, traffic, and weather, but two straightforward indicators are almost always center stage: a driver’s raw pace and their starting grid position. This report focuses on a simple but practical question: How do a driver’s deficit on their best lap and their starting grid position influence where they finish? In everyday terms, if a driver is slower on their best lap or starts farther back, do they also tend to finish farther back?

This question matters because teams invest significant effort in qualifying for clean air, and commentators often emphasize speed as the key difference-maker. Establishing a single, quantitative relationship between pace, grid position, and results allows analysts to discuss performance without relying on complex multivariable models. To make fair comparisons across different seasons and circuits, this analysis focuses on the **2014–present hybrid-engine era**, when Formula 1 introduced consistent power-unit regulations that made cars and race formats more comparable. However, track-specific differences—such as overtaking difficulty, circuit length, and layout—remain unmodeled and may affect the results.

Using the **F1DB** data set, I construct a driver-race table for this hybrid-era period and fit two **single-predictor linear regression models**: (1) best-lap deficit predicting finishing position, and (2) starting grid position predicting finishing position.

The **best-lap deficit** is defined as the time difference (in seconds) between a driver’s fastest lap during the race and the overall race’s quickest lap. For each model, I report how closely the predictor aligns with finishing order (R² and adjusted R²), the model’s typical miss in finishing positions (residual standard error), and the average change in finishing position for a one-unit change in the predictor (slope with a 95% confidence interval). I also include scatter plots with regression lines and basic residual checks to assess linearity and fit quality.

The rest of the paper is organized as follows: **Section 2** describes the dataset and key variables; **Section 3** summarizes exploratory analysis; **Section 4** builds and tests the models; **Section 5** presents results and interpretation; and **Section 6** concludes with key findings and practical implications.

# Data and Variables {#sec-data-variables}

This analysis uses the public Formula 1 Database [@f1db-github] covering races from **2014 through 2024**, corresponding to the **hybrid-engine era**. All officially classified race results are included; every driver who completed a race or was given a finishing position by the FIA appears once per race. Data files were read and tidied in R [@R-base-2024] using `readr`[@readr-2024], `janitor`[@janitor-2023], and `tidyr`[@tidyr-2024], and graphics were created with `ggplot2`[@ggplot2-book-2016].

To ensure comparability across seasons and tracks, only championship races from this era are included. For each driver in each race, three core fields are used:

-   **Finishing position (response):** Integer rank, where 1 = winner.

-   **Best-lap pace deficit (seconds, predictor A):** The difference between a driver’s fastest lap time and the race’s overall fastest lap. Smaller values indicate faster pace.

-   **Starting-grid position (predictor B):** The driver’s qualifying rank at the race start (1 = pole position; higher numbers = further back).

This dataset covers hundreds of races and thousands of driver-race observations, making it suitable for exploring how simple single-predictor models perform across varied conditions.

```{r}
#| include: false
#| warning: false
#| message: false
#| echo: false

# Path to our CSVs
data_dir <- "/Users/spartan/Desktop/Math 261/Project 1/F1_Datasets_for_Project"

suppressPackageStartupMessages({
  library(tidyverse); library(readr); library(janitor); library(stringr); library(broom)
})

# Load F1DB CSVs
races <- read_csv(file.path(data_dir, "f1db-races.csv")) |> clean_names()
res   <- read_csv(file.path(data_dir, "f1db-races-race-results.csv")) |> clean_names()
fast  <- read_csv(file.path(data_dir, "f1db-races-fastest-laps.csv")) |> clean_names()

# Keep 2014+ era and the rank fields we need — from res only
res_era <- res %>%
  dplyr::filter(year >= 2014) %>%
  dplyr::select(race_id, driver_id, year,
                finish_pos = position_number,
                grid_pos   = grid_position_number)


# Helper: parse "M:SS.sss" or "SS.sss" to seconds
parse_lap_seconds <- function(x){
  y <- str_trim(x); y[is.na(y)] <- NA_character_
  secs <- rep(NA_real_, length(y))
  m <- str_match(y, "([0-9]+):([0-9]+\\.?[0-9]*)")
  if (!all(is.na(m[,1]))) {
    idx <- !is.na(m[,1]); secs[idx] <- as.numeric(m[idx,2])*60 + as.numeric(m[idx,3])
  }
  s <- str_match(y, "^([0-9]+\\.?[0-9]*)s?$")
  if (!all(is.na(s[,1]))) {
    idx2 <- is.na(secs) & !is.na(s[,1]); secs[idx2] <- as.numeric(s[idx2,2])
  }
  secs
}

# Ensure fastest-laps have numeric milliseconds
if (!"time_millis" %in% names(fast) && "time" %in% names(fast)) {
  fast <- fast |> mutate(time_millis = parse_lap_seconds(time)*1000)
}

# Build pace-deficit (driver best lap minus race fastest, in seconds)
best_lap <- fast |>
  group_by(race_id, driver_id) |>
  summarise(best_lap_ms = min(time_millis, na.rm = TRUE), .groups = "drop") |>
  filter(is.finite(best_lap_ms))

race_fast <- best_lap |>
  group_by(race_id) |>
  summarise(race_fast_ms = min(best_lap_ms, na.rm = TRUE), .groups = "drop")

pace <- best_lap |>
  left_join(race_fast, by = "race_id") |>
  mutate(best_lap_delta_sec = (best_lap_ms - race_fast_ms)/1000) |>
  select(race_id, driver_id, best_lap_delta_sec)

# Modeling tables
df_pace_pos <- res_era |>
  left_join(pace, by = c("race_id","driver_id")) |>
  filter(is.finite(finish_pos), is.finite(best_lap_delta_sec)) |>
  distinct(race_id, driver_id, .keep_all = TRUE)

df_grid_pos <- res_era |>
  filter(is.finite(finish_pos), is.finite(grid_pos)) |>
  distinct(race_id, driver_id, .keep_all = TRUE)
```

```{r}
#| include: false
#| warning: false
#| message: false
#| echo: false
# Quick peek and missingness for key fields
head(df_pace_pos[, c("race_id","driver_id","year","best_lap_delta_sec","finish_pos")], 6)

sapply(df_pace_pos[, c("best_lap_delta_sec","finish_pos")], function(v) sum(is.na(v)))
sapply(df_grid_pos[, c("grid_pos","finish_pos")], function(v) sum(is.na(v)))

summary(df_pace_pos$best_lap_delta_sec)
summary(df_grid_pos$grid_pos)
summary(df_grid_pos$finish_pos)
```

```{r}
#| echo: false
#| warning: false
# Visual summaries

pal <- list(
  pace   = "#5DA5A4",  # muted teal
  grid   = "#A87C9F",  # dusty purple
  finish = "#C4A46B",  # warm sand
  line   = "#5C6B8A",  # steel blue for outlines
  text   = "#2F343B",  # dark gray
  gridln = "#E9ECEF"   # light grid
)

theme_clean <- function() {
  theme_minimal(base_size = 12) +
    theme(
      plot.title    = element_text(face = "bold", color = pal$text),
      axis.title.x  = element_text(color = pal$text),
      axis.title.y  = element_text(color = pal$text),
      axis.text     = element_text(color = pal$text),
      panel.grid    = element_line(color = pal$gridln, linewidth = 0.4),
      panel.grid.minor = element_blank(),
      panel.grid.major.x = element_line(color = pal$gridln),
      panel.grid.major.y = element_line(color = pal$gridln)
    )
}

# 1) Best-lap deficit — histogram + density
p_def_hist <- ggplot(df_pace_pos, aes(best_lap_delta_sec)) +
  geom_histogram(aes(y = after_stat(..density..)),
                 bins = 40, fill = pal$pace, color = pal$line, alpha = 0.55) +
  geom_density(linewidth = 0.9, color = pal$line) +
  labs(title = "Best-Lap Deficit: Histogram + Density",
       x = "seconds", y = "density") +
  theme_clean()

# 2) Starting grid position — bar chart (discrete)
p_grid_bar <- ggplot(df_grid_pos, aes(factor(grid_pos))) +
  geom_bar(fill = pal$grid, color = pal$line, alpha = 0.85, width = 0.85) +
  labs(title = "Starting Grid Position: Counts",
       x = "grid position (1 = pole)", y = "count") +
  theme_clean()

# 3) Finishing position — bar chart (discrete)
p_finish_bar <- ggplot(df_grid_pos, aes(factor(finish_pos))) +
  geom_bar(fill = pal$finish, color = pal$line, alpha = 0.85, width = 0.85) +
  labs(title = "Finishing Position: Counts",
       x = "finishing position (1 = winner)", y = "count") +
  theme_clean()
```

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: Figure1:fig-def-hist
#| fig-cap: "Distribution of best-lap deficits (2014–2024). Most drivers record lap times within ≈1–2 seconds of the fastest lap; a small fraction are several seconds slower due to incidents or slower pace."
p_def_hist
```

The histogram above shows the distribution of **best-lap deficits** across all hybrid-era races. The overlaid smooth **density line** represents a *kernel density estimate*—a continuous approximation of how the values are distributed, computed by averaging nearby observations to reveal the overall shape. Most drivers are within a few seconds of the race’s fastest lap, with a long right-hand tail reflecting incidents, tire wear, or traffic.

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: Figure3:fig-grid-bar
#| fig-cap: "Starting grid positions used (2014–present). Discrete ranks produce vertical bands in later scatterplots."
p_grid_bar

```

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: Figure4:fig-finish-bar
#| fig-cap: "Finishing positions (1 = winner). Winners create a spike at 1; mass spreads gradually toward the midfield and backmarkers."
p_finish_bar

```

The other two variables, **starting grid position** and **finishing position**, are discrete rankings rather than continuous values, so bar charts are used instead of boxplots.

The **starting-grid position** distribution is roughly uniform across the grid, as expected after many seasons of racing. Each position from pole (1) to the back (around 22) appears frequently, producing vertical bands in later scatter plots.

The **finishing-position** distribution naturally tapers toward the rear of the field, since every race has one winner and many midfield or back-marker finishers. The gradual decline in counts illustrates how retirements and lap-downs reduce the number of classified finishers. These counts also highlight that the difference between nearby ranks (e.g., finishing 4th vs. 6th) is not equivalent in frequency to differences farther down the order (e.g., 18th vs. 20th).

To prepare the dataset, I append lap-time results to compute each driver’s best-lap deficit per race, then keep one row per driver-race combination containing finishing position, grid position, and lap deficit. The analysis includes all classified drivers from **2014–2024**, filtered to exclude non-classified results such as **DNFs, DSQs, and DNSs**.

These plots provide two useful perspectives. First, they show **scale**—finishing and grid positions are integer ranks, while pace deficit is measured in seconds. Second, they show **shape**—positions are count-based and skewed toward lower ranks (winners), while pace deficits form a smooth right-tailed distribution. Together, these visuals establish context for the regression models in the next section.

# Quick Bivariate Analysis

Before fitting any models, I first visualize how each predictor relates to finishing position and check for possible relationships between the predictors themselves. This step does not attempt to prove causation—it simply explores the direction and strength of the relationships, overall spread, and whether any curvature or outliers are visible. I use scatterplots created with *ggplot2*[@ggplot2-book-2016] and dplyr[@dplyr-2023] to examine (a) **best-lap pace deficit versus finishing position**, (b) **starting-grid position versus finishing position**, and (c) **starting-grid position versus best-lap pace deficit.**

```{r}
#| include: false
#| warning: false
#| message: false
#| echo: false

# Subtle palette + lightweight theme (define if not already defined)
if (!exists("pal")) {
  pal <- list(
    pace   = "#5DA5A4",  # muted teal
    grid   = "#A87C9F",  # dusty purple
    finish = "#C4A46B",  # warm sand
    line   = "#5C6B8A",  # steel blue
    text   = "#2F343B",  # dark gray
    gridln = "#E9ECEF"   # light grid
  )
}
if (!exists("theme_clean")) {
  theme_clean <- function() {
    ggplot2::theme_minimal(base_size = 12) +
      ggplot2::theme(
        plot.title        = ggplot2::element_text(face = "bold", color = pal$text),
        axis.title.x      = ggplot2::element_text(color = pal$text),
        axis.title.y      = ggplot2::element_text(color = pal$text),
        axis.text         = ggplot2::element_text(color = pal$text),
        panel.grid        = ggplot2::element_line(color = pal$gridln, linewidth = 0.4),
        panel.grid.minor  = ggplot2::element_blank()
      )
  }
}
```

## Best-lap deficit → finishing position

```{r}
#| warning: false
#| message: false
#| echo: false
p_pace_finish_pts <- ggplot(df_pace_pos, aes(best_lap_delta_sec, finish_pos)) +
  geom_jitter(width = 0, height = 0.20, alpha = 0.35, color = pal$pace) +
  labs(title = "Finishing Position vs Best-Lap Deficit — 2014+",
       x = "Best-lap deficit to race fastest (seconds)",
       y = "Finishing position (1 = winner)") +
  theme_clean()
```

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: Figure5:fig-eda-pace-finish
#| fig-cap: "Finishing position versus best-lap pace deficit (2014–2024). Each point represents a driver–race result. Larger deficits are generally associated with lower finishing positions, though variation remains high."
p_pace_finish_pts
```

The scatterplot shows finishing position versus best-lap pace deficit. A clear upward trend appears: drivers with larger best-lap deficits generally finish farther back in the field. The relationship is **meaningful but noisy**—many factors such as pit strategy, tire wear, or safety cars can blur the pattern. Near zero deficit, most finishes occur near the front, but not all; once the deficit exceeds about three to four seconds, front-running finishes are rare. Overall, the relationship between lap-time deficit and finishing rank is **moderately positive**, suggesting that slower pace usually, but not always, corresponds to worse finishing results.

## Starting grid position → finishing position

```{r}
#| warning: false
#| message: false
#| echo: false
p_grid_finish_pts <- ggplot(df_grid_pos, aes(grid_pos, finish_pos)) +
  geom_jitter(width = 0.20, height = 0.20, alpha = 0.35, color = pal$grid) +
  labs(title = "Finishing Position vs Starting Grid — 2014+",
       x = "Starting grid position (1 = pole)",
       y = "Finishing position (1 = winner)") +
  theme_clean()
```

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: Figure6:fig-eda-grid-finish
#| fig-cap: "Finishing position versus starting-grid position (2014–2024). Finishing ranks rise steadily with deeper grid positions, showing a clear monotonic trend"
p_grid_finish_pts
```

This plot displays finishing position versus starting-grid position. A staircase pattern emerges: as starting-grid position increases (further back on the grid), finishing position also tends to worsen. The vertical stripes occur because grid ranks are discrete integers, but the overall upward slope shows a strong monotonic relationship. Compared with the pace-deficit plot, the spread here is narrower—especially among front rows—indicating that grid position explains finishing results more cleanly than lap-time deficit.

## Are the predictors related?

```{r}
#| warning: false
#| message: false
#| echo: false
df_pp <- inner_join(
  df_grid_pos |> select(race_id, driver_id, grid_pos),
  df_pace_pos |> select(race_id, driver_id, best_lap_delta_sec),
  by = c("race_id","driver_id")
)
```

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: tbl-rank-corr
#| tbl-cap: "Spearman Rank correlation between starting grid and best-lap deficit (2014–2024)."

cor_table <- tibble::tibble(
  Metric   = c("Spearman \u03c1"),
  Estimate = c(
    cor(df_pp$grid_pos, df_pp$best_lap_delta_sec, method = "spearman", use = "complete.obs")
  )
)

cor_table |>
  dplyr::mutate(Estimate = round(Estimate, 2)) |>
  knitr::kable(booktabs = TRUE, align = c("l","r"))

```

Finally, I examine whether the two predictors—starting-grid position and best-lap pace deficit—are correlated. The scatterplot below shows a **moderate positive relationship**: drivers starting farther back tend to have slightly larger lap-time deficits, but the link is not one-to-one.

To quantify this association, I compute the **Spearman rank correlation coefficient (ρ)**, which measures the strength of a *monotonic* relationship between two ranked variables without assuming linearity. A value of **ρ = 0.51** indicates a moderate positive association: in general, drivers who start deeper on the grid also tend to record larger best-lap deficits, although there is substantial variation.

```{r}
#| warning: false
#| message: false
#| echo: false
p_predpred_pts <- ggplot(df_pp, aes(grid_pos, best_lap_delta_sec)) +
  geom_jitter(width = 0.20, height = 0, alpha = 0.25, color = pal$finish) +
  labs(title = "Grid vs Best-Lap Deficit",
       x = "Starting grid position (1 = pole)",
       y = "Best-lap deficit (seconds)") +
  theme_clean()
```

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: Figure8:fig-eda-grid-vs-def
#| fig-cap: "Starting-grid position versus best-lap pace deficit (2014–2024). Moderate positive association: cars starting farther back often have larger pace deficits, but with wide variability."
p_predpred_pts
```

This exploratory check confirms that the predictors are related but not redundant—each contributes distinct information about finishing position. In later sections, I quantify their predictive strength using linear regression models and report goodness-of-fit measures including the coefficient of determination (R²), adjusted R², and residual standard error.

# Methods

To answer the question “How do a driver’s best-lap pace deficit and starting-grid position each affect **finishing position**?”, I fit **two separate one-predictor linear regressions** using data from the 2014-2024 engine era. The models are intentionally simple so that effects can be interpreted in plain units of positions and seconds.

## Model A — Best-lap pace deficit predicting finishing position

Let $\text{FinishPos}_i$ be driver $i$’s finishing position ($1 =$ winner) and $\text{Deficit}_i$ the driver’s best-lap pace deficit in seconds (their best race lap minus the race’s fastest lap). I fit a simple linear model:

$$
\text{FinishPos}_i = \beta_0 + \beta_1 \, \text{Deficit}_i + \varepsilon_i
$$

Here, $\beta_0$ is the intercept—the expected finishing position when the deficit is zero (that is, when a driver’s best lap matches the race’s fastest lap).\
$\beta_1$ is the **average change in finishing position per additional second of deficit** (for example, $\beta_1 = 1.4$ means that each extra second of pace deficit corresponds on average to finishing about 1.4 places farther back).\
The error term $\varepsilon_i$ captures race-specific noise not explained by the model, such as pit strategy, weather, or incidents.

I report the **coefficient of determination (**$R^2$), the **adjusted** $R^2$, the **residual standard error (RSE)**, and the **slope estimate with a 95% confidence interval (CI)**.\
- $R^2$ measures the proportion of variation in finishing position explained by the model.\
- Adjusted $R^2$ penalizes unnecessary predictors; for single-predictor models it is almost identical to $R^2$.\
- The **Residual SE** gives the model’s typical miss, in the same units as the response (finishing positions).\
- The **95% CI** around the slope represents the range of values consistent with the data, assuming approximately normal or large-sample $t$-based errors.

```{r}
#| include: false
#| warning: false
#| message: false
#| echo: false
mod_pace_pos   <- lm(finish_pos ~ best_lap_delta_sec, data = df_pace_pos)
tidy_pace_pos  <- broom::tidy(mod_pace_pos, conf.int = TRUE)
gl_pace_pos    <- broom::glance(mod_pace_pos)
rse_pace_pos   <- summary(mod_pace_pos)$sigma
metrics_pace   <- tibble(Model="A: Best-lap deficit → finish",
                         n=gl_pace_pos$nobs, r2=gl_pace_pos$r.squared,
                         adj_r2=gl_pace_pos$adj.r.squared,
                         rse_pos=rse_pace_pos, rse_sq=rse_pace_pos^2)
aug_pace_pos   <- broom::augment(mod_pace_pos)

```

## Model B — Starting grid position → Finishing position

Let $\text{FinishPos}_i$ be the finishing position and $\text{Grid}_i$ the starting-grid slot ($1 =$ pole; higher numbers = farther back). The model is

$$
\text{FinishPos}_i = \gamma_0 + \gamma_1 \, \text{Grid}_i + \eta_i
$$

Here, $\gamma_1$ is the **average change in finishing position per one grid place farther back** (we expect a positive value: deeper grid positions usually lead to worse finishes).\
$\gamma_0$ is the intercept, mainly anchoring the line near the observed range (e.g., predicted finish at grid ≈ 1–2).\
As with Model A, I summarize $R^2$, adjusted $R^2$, RSE (in finishing-position units), and the slope with a 95% CI to describe effect size and uncertainty.

```{r}
#| warning: false
#| message: false
#| echo: false
mod_grid_pos   <- lm(finish_pos ~ grid_pos, data = df_grid_pos)
tidy_grid_pos  <- broom::tidy(mod_grid_pos, conf.int = TRUE)
gl_grid_pos    <- broom::glance(mod_grid_pos)
rse_grid_pos   <- summary(mod_grid_pos)$sigma
metrics_grid   <- tibble(Model="B: Grid → finish",
                         n=gl_grid_pos$nobs, r2=gl_grid_pos$r.squared,
                         adj_r2=gl_grid_pos$adj.r.squared,
                         rse_pos=rse_grid_pos, rse_sq=rse_grid_pos^2)
aug_grid_pos   <- broom::augment(mod_grid_pos)
```

### Model Assumptions

Both models are estimated with ordinary least squares (OLS) using `lm()` in R [@R-base-2024] and reported with **knitr** [@knitr-2024].\
The analysis relies on the standard OLS assumptions:

1.  **Linearity:** The average finishing position changes linearly with each predictor (pace deficit or grid slot).
2.  **Homoscedasticity:** The spread of residuals is roughly constant across predictor values.
3.  **Normality of residuals:** Residuals are approximately normally distributed, allowing valid confidence intervals and $t$-tests under large-sample conditions.
4.  **Independence:** Each observation is treated as independent. In reality, finishing positions within a race are **not fully independent** (if one driver wins, no one else can). This dependence can slightly understate uncertainty, so confidence intervals should be viewed as approximate.

These assumptions are evaluated qualitatively using residual-diagnostic plots in the Results section.\
Because each model uses only one predictor, the focus is clarity: to quantify how much **one straightforward metric**—pace deficit or grid position—shifts finishing results, expressed as positions per second or positions per grid place, while acknowledging unmodeled race-level factors.

# Results

We report results for two simple regressions on the 2014–present hybrid era:

-   **Best-lap pace deficit predicting finishing position**

-   **Starting-grid position predicting finishing position**

For each, I summarize the slope (effect size), how much variance is explained (R² and adjusted R²), and the model’s typical miss in positions (Residual Standard Error, RSE).\
The **red line** in each scatter plot is the fitted regression line showing the average trend, while the **grey shaded band** is its **95% confidence interval (CI)** — the range of plausible mean predictions given sampling uncertainty.\
A 95% CI means that, under the model’s assumptions, if we refit this model many times on new samples, about 95% of the intervals would capture the true average slope.

------------------------------------------------------------------------

## Best-lap pace deficit predicting finishing position

According to the model, the average change in finishing place per +1 second of pace deficit is **`r round(tidy_pace_pos$estimate[ tidy_pace_pos$term=="best_lap_delta_sec" ], 3)`** positions (95% CI **\[`r round(tidy_pace_pos$conf.low[ tidy_pace_pos$term=="best_lap_delta_sec" ], 3)`, `r round(tidy_pace_pos$conf.high[ tidy_pace_pos$term=="best_lap_delta_sec" ], 3)`\]**).\
The fit explains **`r round(metrics_pace$r2, 3)`** of the variation in finishing order (adjusted R² = **`r round(metrics_pace$adj_r2, 3)`**), with a Residual SE of **`r round(metrics_pace$rse_pos, 2)`** positions (variance **`r round(metrics_pace$rse_sq, 2)`**).

In plain terms, if the line predicts P9, actual results often fall about **±`r round(metrics_pace$rse_pos, 1)`** positions around that.\
This matches the earlier exploratory plots: pace deficit is a meaningful but noisy predictor — it captures general trends but not race-to-race volatility.

```{r}
#| warning: false
#| message: false
#| echo: false
p_pace_finish <- ggplot(df_pace_pos, aes(best_lap_delta_sec, finish_pos)) +
  geom_jitter(width = 0, height = 0.20, alpha = 0.35, color = pal$pace) +
  geom_smooth(method = "lm", se = TRUE, color = "red", fill = "grey80") +
  labs(title = "Finishing Position vs Best-Lap Deficit — 2014–2024",
       x = "Best-lap deficit (seconds)",
       y = "Finishing position (1 = winner)") +
  theme_clean()
```

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: fig-res-pace-finish
#| fig-cap: "Finishing position vs best-lap deficit with linear fit. The red line shows the fitted average relationship; the grey band shows its 95% confidence interval. Upward slope quantifies positions lost per second of deficit; variability reflects race dynamics."
p_pace_finish

```

## Starting grid position → finishing position

Here the slope is **`r round(tidy_grid_pos$estimate[ tidy_grid_pos$term=="grid_pos" ], 3)`** positions per grid place farther back (95% CI **\[`r round(tidy_grid_pos$conf.low[ tidy_grid_pos$term=="grid_pos" ], 3)`, `r round(tidy_grid_pos$conf.high[ tidy_grid_pos$term=="grid_pos" ], 3)`\]**). This model explains **`r round(metrics_grid$r2, 3)`** of the variation in finishing position (adjusted R² = **`r round(metrics_grid$adj_r2, 3)`**), with a Residual SE of **`r round(metrics_grid$rse_pos, 2)`** positions (variance **`r round(metrics_grid$rse_sq, 2)`**).

The tighter error and higher R² reflect that **grid position** is a stronger, steadier predictor of finishing order than pace deficit.

```{r}
#| warning: false
#| message: false
#| echo: false
p_grid_finish <- ggplot(df_grid_pos, aes(grid_pos, finish_pos)) +
geom_jitter(width = 0.20, height = 0.20, alpha = 0.35, color = pal$grid) +
geom_smooth(method = "lm", se = TRUE, color = "red", fill = "grey80") +
labs(title = "Finishing Position vs Starting Grid — 2014–2024",
x = "Starting grid (1 = pole)",
y = "Finishing position (1 = winner)") +
theme_clean()
```

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: fig-res-grid-finish
#| fig-cap: "Finishing position vs starting grid with linear fit. The red line shows the fitted mean; the grey band shows the 95% CI for that mean. Grid position has a clear, steady upward trend, indicating that starting farther back usually means finishing farther back."
p_grid_finish
```

### Model summaries

```{r}
#| warning: false
#| message: false
#| echo: false
metrics_combined <- bind_rows(metrics_pace, metrics_grid)
knitr::kable(
metrics_combined |> mutate(
r2 = round(r2, 3),
adj_r2 = round(adj_r2, 3),
rse_pos = round(rse_pos, 3),
rse_sq = round(rse_sq, 3)
),
caption = "Model summaries: number of observations (n), R², adjusted R², residual standard error (in positions), and residual variance."
)

coef_table <- bind_rows(
tidy_pace_pos |> mutate(Model = "A: Best-lap deficit predicting finish"),
tidy_grid_pos |> mutate(Model = "B: Starting grid predicting finish")
) |>
filter(term != "(Intercept)") |>
transmute(
Model,
Term = recode(term,
best_lap_delta_sec = "Best-lap deficit (seconds)",
grid_pos = "Starting-grid position"
),
Estimate = round(estimate, 3),
`Std. Error` = round(std.error, 3),
`CI low` = round(conf.low, 3),
`CI high` = round(conf.high, 3)
)
knitr::kable(coef_table, caption = "Slope estimates (effect on finishing position) with 95% confidence intervals.")
```

### Residual diagnostics

```{r}
#| warning: false
#| message: false
#| echo: false
p_resid_pace <- ggplot(aug_pace_pos, aes(.fitted, .resid)) +
geom_point(alpha = .3) +
geom_hline(yintercept = 0, linetype = 2) +
labs(title = "Residuals vs Fitted — Best-Lap Deficit Model",
x = "Fitted finish position",
y = "Residuals") +
theme_clean()

p_resid_grid <- ggplot(aug_grid_pos, aes(.fitted, .resid)) +
geom_point(alpha = .3) +
geom_hline(yintercept = 0, linetype = 2) +
labs(title = "Residuals vs Fitted — Grid Model",
x = "Fitted finish position",
y = "Residuals") +
theme_clean()
```

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: fig-resid-pace
#| fig-cap: "Residuals vs fitted values for the best-lap deficit model. The band is centered near zero, with mild structure at the extremes reflecting the bounded nature of finishing ranks (1 to 22)."
p_resid_pace
```

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: fig-resid-grid
#| fig-cap: "Residuals vs fitted values for the grid model. The band is tighter and more horizontal, showing roughly constant variance and no strong funneling."
p_resid_grid
```

Both residual plots show the expected **striping** pattern because finishing positions are **integer values**, not continuous ones. This discrete structure naturally creates horizontal bands but does not indicate a model problem. The points remain centered around zero without a widening funnel, so a linear mean with roughly constant variance appears reasonable. The pace model shows slightly more spread and mild curvature, while the grid model’s residuals are more uniform — consistent with grid position being a cleaner predictor.

### Q–Q plot check for normality

```{r}
#| warning: false
#| message: false
#| echo: false
#| fig-pos: "H"
#| label: fig-qq-pace
#| fig-cap: "Q–Q plot of residuals for the best-lap deficit model. Points mostly follow the diagonal, suggesting residuals are approximately normal with mild tails."
ggplot(aug_pace_pos, aes(sample = .resid)) +
stat_qq(alpha = 0.3) +
stat_qq_line(color = "red") +
theme_clean() +
labs(title = "Q–Q Plot — Best-Lap Deficit Model",
x = "Theoretical Quantiles",
y = "Sample Quantiles")
```

```{r}
#| warning: false
#| message: false
#| echo: false
#| fig-pos: "H"
#| label: fig-qq-grid
#| fig-cap: "Q–Q plot of residuals for the grid model. Points follow the reference line closely, consistent with approximate normal residuals."
ggplot(aug_grid_pos, aes(sample = .resid)) +
stat_qq(alpha = 0.3) +
stat_qq_line(color = "red") +
theme_clean() +
labs(title = "Q–Q Plot — Grid Model",
x = "Theoretical Quantiles",
y = "Sample Quantiles")

```

Both Q–Q plots show residuals that follow the reference line closely through the central range, indicating that the normality assumption for the error terms is broadly reasonable. Minor deviations appear at the tails—especially in the best-lap-deficit model—where a few races produced unusually large residuals. These slight tail departures are expected in competitive sports data and are unlikely to affect inference given the large sample size. Overall, the residuals display approximate normality, supporting the use of t-based confidence intervals in both models.

# Discussion

This study used two simple linear regressions to examine how a driver’s on-day pace (measured by best-lap deficit) and starting-grid position relate to finishing position in modern Formula 1. The results are clear: grid position is the stronger and steadier predictor, while best-lap deficit still carries meaningful information but with greater variability—consistent with the earlier bivariate and residual checks.

These models show that both pace and track position influence finishing outcomes, but in different ways. Grid position provides a structural advantage at the start, while the best-lap deficit—based on a driver’s single fastest lap—offers only a snapshot of potential race pace rather than sustained performance. This helps explain why the pace–finish relationship is noisier. Quantitatively, the grid-position model explains about 55% of the variation in finishing order, while the pace-deficit model explains about 29%, showing how much stronger starting position is as a predictor of race results.

There are limitations. The analysis considers only one predictor at a time and does not adjust for track layout, safety cars, tire or driver strength, or weather. Finishing position is also an integer and bounded variable, so small nonlinearities are expected. Because best-lap deficit represents only one lap’s performance, it may not fully reflect race-long speed consistency.

Future work could extend the models to include track or season effects, team or driver indicators, or per-lap average pace metrics. Still, the practical message is straightforward: starting closer to the front reliably improves finishing position, and even being one second slower on the day’s fastest lap tends to correspond to finishing several places farther back—quantified here in plain units of positions per grid place and positions per second.

# References
